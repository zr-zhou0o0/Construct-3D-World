/*************************************************************************
【文件名】                 Dice.hpp
【功能模块和目的】         骰子动画声明
【开发者及日期】           可能性之鲤鱼 2022/7/16
【链接】        https://www.zhihu.com/question/386347847/answer/2576561977
【来源】                   知乎
【更改记录】               无
*************************************************************************/

#include <stdlib.h>
#include <stdio.h>
#include <memory.h>
#include <math.h>
#include <thread>
#include <atomic>

#ifdef _WIN32
#include <windows.h>
#else
#include <unistd.h>
#endif

#ifndef DICE_HPP
#define DICE_HPP

/*************************************************************************
【类名】             Dice
【功能】             实现骰子动画
【接口说明】         提供骰子动画的启动、停止和随机骰子功能
【开发者及日期】     可能性之鲤鱼 2022/7/16
【更改记录】         无
*************************************************************************/
class Dice {

public:
    //--------------------------------------------------------------------
    // 构造、析构函数
    //--------------------------------------------------------------------
    // 默认构造函数
    Dice();
    // 拷贝构造函数
    Dice(const Dice& Source) = default;
    // 赋值运算符重载
    Dice& operator=(const Dice& Source) = default;
    // 析构函数
    virtual ~Dice();

    //--------------------------------------------------------------------
    // 公共成员函数
    //--------------------------------------------------------------------
    // 随机骰子
    bool RandomDice();

private:
    //--------------------------------------------------------------------
    // 私有成员函数
    //--------------------------------------------------------------------
    // 启动骰子动画
    bool StartDice();
    // 停止骰子动画
    bool StopDice();
    // 判断骰子面
    int JudgeFace(int ID, double x, double y);
    // 初始化
    void Initialize();
    // 平台相关的睡眠函数
    void PlatformSleep(unsigned int uMilliseconds);
    // 渲染帧
    void RenderFrame();

    //--------------------------------------------------------------------
    // 私有成员变量
    //--------------------------------------------------------------------
    // 原子布尔变量，用于控制骰子动画的运行状态
    std::atomic<bool> m_RunDice{};
    // 线程对象，用于运行骰子动画
    std::thread m_DiceThread;

    // 常量定义
    static constexpr int C = 3;
    static constexpr int SCREEN_WIDTH = 50;
    static constexpr int SCREEN_HEIGHT = 25;

    // 骰子面坐标
    double m_Cube[6][4][3] = {
        {
            {-0.5, -0.5,  0.5}, { 0.5, -0.5,  0.5}, 
            {-0.5,  0.5,  0.5}, { 0.0,  0.0,  1.0}
        },
        {
            {-0.5, -0.5,  0.5}, {-0.5, -0.5, -0.5}, 
            {-0.5,  0.5,  0.5}, {-1.0,  0.0,  0.0}
        },
        {
            {-0.5, -0.5,  0.5}, {-0.5, -0.5, -0.5}, 
            { 0.5, -0.5,  0.5}, { 0.0, -1.0,  0.0}
        },
        {
            {-0.5,  0.5,  0.5}, { 0.5,  0.5,  0.5}, 
            {-0.5,  0.5, -0.5}, { 0.0,  1.0,  0.0}
        },
        {
            { 0.5, -0.5,  0.5}, { 0.5, -0.5, -0.5}, 
            { 0.5,  0.5,  0.5}, { 1.0,  0.0,  0.0}
        },
        {
            {-0.5, -0.5, -0.5}, { 0.5, -0.5, -0.5}, 
            {-0.5,  0.5, -0.5}, { 0.0,  0.0, -1.0}
        }
    };

    // 骰子面点阵
    static constexpr int FACE[6][3][3] = {
        {
            {0, 0, 0}, {0, 1, 0}, {0, 0, 0}
        },
        {
            {0, 0, 1}, {0, 0, 0}, {1, 0, 0}
        },
        {
            {0, 0, 1}, {0, 1, 0}, {1, 0, 0}
        },
        {
            {1, 0, 1}, {0, 0, 0}, {1, 0, 1}
        },
        {
            {1, 0, 1}, {0, 1, 0}, {1, 0, 1}
        },
        {
            {1, 0, 1}, {1, 0, 1}, {1, 0, 1}
        }
    };

};

#endif


