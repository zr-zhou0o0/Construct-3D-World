/*************************************************************************
【文件名】                 View.hpp
【功能模块和目的】         界面类声明
【开发者及日期】           周子睿 2024/8/12
【更改记录】               无
*************************************************************************/

#include <iostream>

#include "Dice.hpp"
#include "../../Controller/Controller.hpp"

using namespace std;

#ifndef VIEW_HPP
#define VIEW_HPP

/*************************************************************************
【类名】             View
【功能】             实现界面交互功能
【接口说明】         提供启动软件、菜单操作等功能
【开发者及日期】     周子睿 2024/8/12
【更改记录】         无
*************************************************************************/
class View {

public:
    //--------------------------------------------------------------------
    // 必要的构造、析构行为
    //--------------------------------------------------------------------
    // 默认构造函数
    View();
    // 拷贝构造函数
    View(const View& Source) = default;
    // 赋值运算符重载
    View& operator=(const View& Source) = default;
    // 析构函数
    virtual ~View();

    //--------------------------------------------------------------------
    // 公共成员函数
    //--------------------------------------------------------------------
    // 启动骰子动画
    void StartDice();

private:
    //--------------------------------------------------------------------
    // 私有成员函数
    //--------------------------------------------------------------------
    // 显示启动菜单
    std::string StartMenu();
    // 显示编辑菜单
    std::string EditMenu();
    // 打开模型
    std::string OpenModel();
    // 保存模型
    std::string SaveModel();
    // 添加模式
    std::string AddMode();
    // 添加点
    std::string AddPoint();
    // 删除模式
    std::string DeleteMode();
    // 修改模式
    std::string ModifyMode();
    // 获取模型信息
    std::string GetModelInformation();
    // 打印模型
    std::string PrintModel();
    // 打印编辑菜单
    std::string PrintEditMenu();
    // 获取初始化控制器
    static Controller& GetInitController();

    //--------------------------------------------------------------------
    // 私有成员变量
    //--------------------------------------------------------------------
    // 控制器引用
    Controller& m_Controller;
};

#endif